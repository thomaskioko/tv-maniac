import com.thomaskioko.tvmaniac.db.Id;
import com.thomaskioko.tvmaniac.db.TmdbId;

CREATE TABLE IF NOT EXISTS featured_shows (
    `id` INTEGER AS Id<TmdbId> PRIMARY KEY NOT NULL,
    `name` TEXT,
    `poster_path` TEXT,
    `overview` TEXT
);

-- indices

CREATE UNIQUE INDEX IF NOT EXISTS `index_featured_shows_show_id` ON `featured_shows` (`id`);

-- queries

entriesInPage:
SELECT
    featured_shows.id,
    COALESCE(featured_shows.name, '') AS name,
    featured_shows.poster_path,
    featured_shows.overview,
    CASE WHEN watchlist.id IS NOT NULL THEN 1 ELSE 0 END AS in_library
FROM featured_shows
LEFT OUTER JOIN watchlist ON featured_shows.id = watchlist.id
WHERE featured_shows.name IS NOT NULL
ORDER BY featured_shows.id ASC;

insert:
INSERT OR IGNORE INTO featured_shows(
    `id`,
    `name`,
    `poster_path`,
    `overview`
) VALUES (
    :id,
    :name,
    :poster_path,
    :overview
);

featuredShows:
SELECT
    featured_shows.id,
    tvshow.name,
    tvshow.poster_path,
    tvshow.overview,
    CASE WHEN watchlist.id IS NOT NULL THEN 1 ELSE 0 END AS in_library
FROM
    featured_shows
INNER JOIN
    tvshow ON tvshow.id = featured_shows.id
LEFT OUTER JOIN
    watchlist ON tvshow.id = watchlist.id
WHERE
    tvshow.vote_average >= 7.0
    AND tvshow.vote_count >= 100
ORDER BY
    (tvshow.popularity * 0.3 + tvshow.vote_average * 10 * 0.7) DESC;

delete:
DELETE FROM featured_shows
WHERE id = :id;

deleteAll:
DELETE FROM featured_shows;
