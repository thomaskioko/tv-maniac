import kotlin.collections.List;
import kotlin.String;

CREATE TABLE show(
trakt_id INTEGER NOT NULL PRIMARY KEY,
tmdb_id INTEGER,
title TEXT NOT NULL,
overview TEXT NOT NULL,
language TEXT,
year TEXT NOT NULL,
rating REAL NOT NULL,
status TEXT NOT NULL,
runtime INTEGER NOT NULL,
votes INTEGER NOT NULL,
aired_episodes INTEGER DEFAULT NULL,
genres TEXT AS List<String> NOT NULL
);

insertOrReplace:
INSERT OR REPLACE INTO show(
trakt_id,
tmdb_id,
title,
overview,
language,
year,
votes,
runtime,
rating,
genres,
status
)
VALUES(?,?,?,?,?,?,?,?,?,?,?);

selectByShowId:
SELECT * FROM show
LEFT OUTER JOIN show_image ON show_image.trakt_id = show.trakt_id
LEFT OUTER JOIN followed_shows ON show.trakt_id = followed_shows.id
WHERE show.trakt_id = ?;

selectShowByTmdbId:
SELECT * FROM show
WHERE tmdb_id = ?;

selectShows:
SELECT * FROM show
LEFT OUTER JOIN show_image ON show_image.trakt_id = show.trakt_id;

deleteAll:
DELETE FROM show;

selectShowsByCategory:
SELECT show.trakt_id, show.tmdb_id ,show.title, show.overview, show.language, show.year, show.rating,
show.votes, show.status, show.runtime, show.genres, show_image.poster_url, show_image.backdrop_url,
show_category.category_id
FROM show
INNER JOIN show_category ON show_category.trakt_id = show.trakt_id
LEFT OUTER JOIN show_image ON show_image.trakt_id = show.trakt_id
WHERE show_category.category_id = ?
ORDER BY show.rating, show.year DESC;

selectShowImages:
SELECT show.trakt_id, show.tmdb_id FROM show
LEFT OUTER JOIN show_image ON show_image.trakt_id = show.trakt_id
WHERE poster_url IS NULL AND backdrop_url IS NULL;