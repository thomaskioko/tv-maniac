name: Android and iOS CI Pipeline

on:
    push:
        branches: [ main ]
    pull_request:
        types: [ opened, synchronize ]

concurrency:
    group: ci-${{ github.ref }}-${{ github.head_ref }}
    cancel-in-progress: true

env:
    JDK_VERSION: 21
    DISTRIBUTION: 'temurin'
    XCODE_VERSION: 16.4
    GRADLE_CACHE_PATH: |
        ~/.gradle/caches
        ~/.gradle/wrapper
    SPM_CACHE_PATH: |
        ~/Library/Caches/org.swift.swiftpm
        ~/Library/Developer/Xcode/DerivedData

jobs:
    build-android:
        runs-on: ubuntu-latest
        env:
            TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
            TMDB_API_URL: ${{ secrets.TMDB_API_URL }}
            TRAKT_CLIENT_ID: ${{ secrets.TRAKT_CLIENT_ID }}
            TRAKT_CLIENT_SECRET: ${{ secrets.TRAKT_CLIENT_SECRET }}
            TRAKT_REDIRECT_URI: ${{ secrets.TRAKT_REDIRECT_URI }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            -   name: 🚚 Checkout Code
                uses: actions/checkout@v5

            -   name: Set up JDK
                uses: actions/setup-java@v5
                with:
                    distribution: ${{ env.DISTRIBUTION }}
                    java-version: ${{ env.JDK_VERSION }}

            -   name: 📁 Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: 🐘 Setup Gradle 8.8
                uses: gradle/actions/setup-gradle@v4
                with:
                    gradle-version: 8.11

            -   name: Add App Secrets
                run: |
                    echo "TMDB_API_KEY=$TMDB_API_KEY" >> ./local.properties
                    echo "TMDB_API_URL=$TMDB_API_URL" >> ./local.properties
                    echo "TRAKT_CLIENT_ID=$TRAKT_CLIENT_ID" >> ./local.properties
                    echo "TRAKT_CLIENT_SECRET=$TRAKT_CLIENT_SECRET" >> ./local.properties
                    echo "TRAKT_REDIRECT_URI=$TRAKT_REDIRECT_URI" >> ./local.properties

            -   name: 🤖 Build Android App
                run: |
                    ./gradlew clean \
                      :app:assembleRelease \
                      :app:bundleRelease \
                      -Pandroidx.baselineprofile.skipgeneration=true \
                        -Pcompose.enableCompilerMetrics=true \
                        -Pcompose.enableCompilerReports=true \
                        -Ptvmaniac.debugOnly=false \
                      --no-configuration-cache



    android-lint:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   uses: actions/setup-java@v5
                with:
                    distribution: ${{ env.DISTRIBUTION }}
                    java-version: ${{ env.JDK_VERSION }}

            -   name: Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Lint Project
                run: ./gradlew :app:lintRelease -Ptvmaniac.debugOnly=false

            -   name: Upload Lint Report
                if: ${{ !cancelled() }}
                uses: actions/upload-artifact@v4
                with:
                    name: android-lint-report
                    path: '**/build/reports/lint-results-*.html'

    spotless:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   uses: actions/setup-java@v5
                with:
                    distribution: ${{ env.DISTRIBUTION }}
                    java-version: ${{ env.JDK_VERSION }}

            -   name: Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Run Spotless
                run: ./gradlew spotlessCheck -Ptvmaniac.debugOnly=false --no-configuration-cache

    dependency-health:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   uses: actions/setup-java@v5
                with:
                    distribution: ${{ env.DISTRIBUTION }}
                    java-version: ${{ env.JDK_VERSION }}

            -   name: Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Dependency Health
                run: ./gradlew buildHealth -Ptvmaniac.debugOnly=false

            -   name: Upload Dependency health Report
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: dependency-health-report
                    path: '**/build/reports/dependency-analysis/build-health-report.txt'

    jvm-test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   uses: actions/setup-java@v5
                with:
                    distribution: ${{ env.DISTRIBUTION }}
                    java-version: ${{ env.JDK_VERSION }}

            -   name: Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Run JVM Tests
                run: ./gradlew jvmTest -Ptvmaniac.debugOnly=false

            -   name: Upload Test Reports
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: test-report
                    path: '**/build/reports/*'

    common-ios-test:
        runs-on: macos-latest

        steps:
            -   name: Checkout
                uses: actions/checkout@v5

            -   name: Set up JDK
                uses: actions/setup-java@v5
                with:
                    distribution: ${{ env.DISTRIBUTION }}
                    java-version: ${{ env.JDK_VERSION }}

            -   name: Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Run Common iOS Unit Tests
                run: ./gradlew clean iosSimulatorArm64Test -Ptvmaniac.enableIos=true -Ptvmaniac.debugOnly=false

            -   name: Upload Common Test Report
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: common-ios-test-report
                    path: '**/build/reports/*'

    build-ios:
        runs-on: macos-15
        timeout-minutes: 60
        env:
            FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60

        steps:
            -   name: 🚚 Checkout project
                uses: actions/checkout@v5

            -   name: 📀 Setup Xcode version
                uses: maxim-lobanov/setup-xcode@v1
                with:
                    xcode-version: ${{ env.XCODE_VERSION }}

            -   name: 💎 Set up Ruby
                uses: ruby/setup-ruby@v1
                with:
                    bundler-cache: true

            -   name: Cache SPM dependencies
                uses: actions/cache@v4
                with:
                    path: ${{ env.SPM_CACHE_PATH }}
                    key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
                    restore-keys: |
                        ${{ runner.os }}-spm-

            -   name: 📦 Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: 🧹 Clear Derived Data
                run: bundle exec fastlane clear_derived_data_lane

            -   name: 📦 Install dependencies with Bundler
                run: bundle install

            -   name: 🧱 Build iOS App
                run: bundle exec fastlane build_tvmaniac

            -   name: Upload build artifacts
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: ios-build
                    path: |
                        build/
                        fastlane/logs




    swift-lint:
        runs-on: macos-latest

        steps:
            -   name: 🚚 Checkout project
                uses: actions/checkout@v5

            -   name: 💎 Set up Ruby
                uses: ruby/setup-ruby@v1
                with:
                    bundler-cache: true

            -   name: 📦 Install Swift Lint
                run: brew install swiftlint

            -   name: 📦 Install dependencies with Bundler
                run: bundle install

            -   name: 🔍 Run SwiftLint
                run: bundle exec fastlane ios lint

    ios-snapshot-test:
        runs-on: macos-15
        timeout-minutes: 60
        env:
            FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60

        steps:
            -   name: 🚚 Checkout project
                uses: actions/checkout@v5

            -   name: 📀 Setup Xcode version
                uses: maxim-lobanov/setup-xcode@v1
                with:
                    xcode-version: ${{ env.XCODE_VERSION }}

            -   name: 📱 List Available Simulators
                run: xcrun simctl list devices

            -   name: 💎 Set up Ruby
                uses: ruby/setup-ruby@v1
                with:
                    bundler-cache: true

            -   name: Cache SPM dependencies
                uses: actions/cache@v4
                with:
                    path: ${{ env.SPM_CACHE_PATH }}
                    key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
                    restore-keys: |
                        ${{ runner.os }}-spm-

            -   name: 📦 Setup Gradle Cache
                uses: actions/cache@v4
                with:
                    path: ${{ env.GRADLE_CACHE_PATH }}
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Install dependencies with Bundler
                run: bundle install

            -   name: 📸 Run Snapshot Tests
                run: bundle exec fastlane snapshot_tests

            -   name: Upload test results
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: snapshot-test-results
                    path: |
                        fastlane/test_output
                        fastlane/logs
                        derived_data/Logs/Test
