#!/bin/sh

set -e  # Exit immediately if any command fails

echo "üîç Running pre-commit checks..."

# Store the original directory
ORIGINAL_DIR=$(pwd)

# Cleanup function to ensure we return to original directory
cleanup() {
    cd "$ORIGINAL_DIR"
}
trap cleanup EXIT

# Run spotlessCheck to verify code formatting
echo "üìù Checking code formatting with Spotless..."
if ! ./gradlew spotlessCheck --quiet; then
    echo "‚ùå Code formatting check failed. Please run './gradlew spotlessApply' to fix formatting issues."
    exit 1
fi

echo "‚úÖ Code formatting check passed."

# Check if there are iOS files in the commit
ios_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(swift)$')

if [ -n "$ios_files" ]; then
    if [ -d "ios" ]; then
        echo "üì± iOS files detected in commit. Running Swift checks..."
        
        # Always use fastlane for consistency
        if command -v bundle &> /dev/null && [ -f "Gemfile" ]; then
            echo "üßπ Running SwiftLint check via fastlane..."
            if ! bundle exec fastlane ios lint; then
                echo "‚ùå SwiftLint check failed. Please fix the violations and commit again."
                echo "üí° Run 'bundle exec fastlane ios lint' to see detailed violations."
                exit 1
            fi
            
            echo "üîç Running SwiftFormat check via fastlane..."
            if ! bundle exec fastlane ios check_swift_format; then
                echo "‚ùå Swift code formatting check failed. Please run the following command to fix formatting issues:"
                echo "bundle exec fastlane ios format_swift_code"
                echo "Note: This will modify your files to match the formatting rules. After fixing, commit again."
                exit 1
            fi
            
            echo "‚úÖ All Swift checks passed."
        else
            echo "‚ùå Fastlane/Bundle not available. Please ensure Gemfile exists and run 'bundle install'."
            exit 1
        fi
    else
        echo "‚ö†Ô∏è  iOS files detected in commit but ios directory not found. Skipping Swift checks."
    fi
else
    echo "‚ÑπÔ∏è  No iOS files in commit, skipping Swift checks."
fi

echo "üéâ All pre-commit checks passed!"
exit 0
